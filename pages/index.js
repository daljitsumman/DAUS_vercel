import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Button from "react-bootstrap/Button"
import Row from "react-bootstrap/Row"
import Col from "react-bootstrap/Col"
import Navbar from "react-bootstrap/Navbar"
import Nav from "react-bootstrap/Nav"
import NavDropdown from "react-bootstrap/NavDropdown"
import Dropdown from "react-bootstrap/Dropdown"
import Select from 'react-select'
import Container from "react-bootstrap/Container"
import React, {useState, Fragment} from "react";
import Userpool,{Attribute} from "../utilities/userpool";
import practices from '../data/practices'

import 'bootstrap/dist/css/bootstrap.css';

export default function Home() {
  const [email,setEmail] = useState("");
  const [password,setPassword] = useState("")

  const [selectedBorough, setSelectedBorough] = useState("");
  const [selectedDropdownPcnValue, setSelectedDropdownPcnValue] = useState("");
  const [selectedDropdownPracticeValue, setselectedDropdownPracticeValue] = useState("");


  const onSubmit = (event) => {
    event.preventDefault();

    const fam = new Attribute({Name:"family_name", Value: "soosif"})
    const gender = new Attribute({Name:"gender", Value:"1"})
    const name = new Attribute({Name:"given_name", Value:"malesadsads"})

    const attributes = [];

    attributes.push(fam)
    attributes.push(gender);
    attributes.push(name);

    console.log(email,password);

    Userpool.signUp(email,password,attributes,null, (err, data) => {
      console.log(err);
    });
  }

  // Extract all the boroughs
  const options = Object.keys(practices.borough).map(e => {
    return {value: e, label: e}
  });

  const handleBoroughDropdownEvent = (e) => {
    setSelectedBorough(e.value);
    setSelectedDropdownPcnValue("");
    setselectedDropdownPracticeValue("");
  }

  const handlePcnDropdownEvent = (e) => {
    setSelectedDropdownPcnValue(e);
    setselectedDropdownPracticeValue("");
  }

  const handlePracticeDropdownEvent = (e) => {
    setselectedDropdownPracticeValue(e);
  }

  const getPractices = () => {
    return practices.borough[selectedBorough][selectedDropdownPcnValue.label].map(e => {
      return {value: e.name, label: e.name}
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar bg="light" expand="lg">
        <Container>
          <Navbar.Brand href="#home">Daus</Navbar.Brand>
          <Navbar.Toggle aria-controls="basic-navbar-nav" />
          <Navbar.Collapse id="basic-navbar-nav">
            <Nav className="me-auto">
              <Nav.Link href="#home">Home</Nav.Link>
              <Nav.Link href="#link">Link</Nav.Link>
              <NavDropdown title="Dropdown" id="basic-nav-dropdown">
                <NavDropdown.Item href="#action/3.1">Action</NavDropdown.Item>
                <NavDropdown.Item href="#action/3.2">Another action</NavDropdown.Item>
                <NavDropdown.Item href="#action/3.3">Something</NavDropdown.Item>
                <NavDropdown.Divider />
                <NavDropdown.Item href="#action/3.4">Separated link</NavDropdown.Item>
              </NavDropdown>
            </Nav>
          </Navbar.Collapse>
        </Container>
      </Navbar>

      <Container>

{/* <form onSubmit={onSubmit} >
  <label htmlFor='email' >Email</label>
  <input value={email} onChange={(event) => setEmail(event.target.value)}/>
  <label htmlFor='password' >Password</label>
  <input value={password} onChange={(event) => setPassword(event.target.value)}/>
  <button type='submit'>submit</button>
</form> */}

  <Row style={{"margin-top":"30px"}}>
    <Col lg="3" >
      <label id="aria-label" htmlFor="aria-example-input">
        Select a borough
      </label>
      <Select 
        options={options} 
        onChange={handleBoroughDropdownEvent}
      />
    
      { selectedBorough != "" && 
        <Fragment>
          <label id="aria-label" htmlFor="aria-example-input">
            Select a PCN
          </label>
          <Select 
            options={Object.keys(practices.borough[selectedBorough]).map(e => {
              return {value: e, label: e}
            })} 
            placeholder="Select PCN"
            value={selectedDropdownPcnValue}
            onChange={handlePcnDropdownEvent}
          />
        </Fragment>
      }

      {
        selectedDropdownPcnValue != "" && 
        <Fragment>
          <label id="aria-label" htmlFor="aria-example-input">
            Select a Practice
          </label>
          <Select 
            options={getPractices()} 
            placeholder="Select Practice"
            value={selectedDropdownPracticeValue}
            onChange={handlePracticeDropdownEvent}
          />
        </Fragment>
      }

    </Col>
    <Col lg="9">Practise &gt; -----</Col>
  </Row>
</Container>


    </div>
  )
}
